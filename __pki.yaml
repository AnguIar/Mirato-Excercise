---
# Create a selfsigned Issuer, in order to create a root CA certificate for
# signing webhook serving certificates
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: self-signed
  namespace: example1
spec:
  selfSigned: {}

---

# Generate a CA Certificate used to sign certificates for the webhook
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: ca-certiicate
  namespace: example1
spec:
  secretName: ca-certiicate
  duration: 43800h # 5y
  issuerRef:
    name: self-signed
  commonName: "ca.example-webhook.cert-manager"
  isCA: true

---

# Create an Issuer that uses the above generated CA certificate to issue certs
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: webhook-ca
  namespace: example1
spec:
  ca:
    secretName: ca-certiicate

---

# Finally, generate a serving certificate for the webhook to use
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: serving-certificate
  namespace: example1
spec:
  secretName: serving-certificate
  duration: 8760h # 1y
  issuerRef:
    name: webhook-ca
  dnsNames:
  - webhook-service
  - webhook-service.example1
  - webhook-service.example1.svc